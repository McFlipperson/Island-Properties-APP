export declare const adminUsers: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "admin_users";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "admin_users";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        username: import("drizzle-orm/pg-core").PgColumn<{
            name: "username";
            tableName: "admin_users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        email: import("drizzle-orm/pg-core").PgColumn<{
            name: "email";
            tableName: "admin_users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        passwordHash: import("drizzle-orm/pg-core").PgColumn<{
            name: "password_hash";
            tableName: "admin_users";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        fullName: import("drizzle-orm/pg-core").PgColumn<{
            name: "full_name";
            tableName: "admin_users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        role: import("drizzle-orm/pg-core").PgColumn<{
            name: "role";
            tableName: "admin_users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "admin_users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        lastLogin: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_login";
            tableName: "admin_users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "admin_users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "admin_users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const expertPersonas: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "expert_personas";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        adminUserId: import("drizzle-orm/pg-core").PgColumn<{
            name: "admin_user_id";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        expertName: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_name";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        expertStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_status";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        expertiseFocus: import("drizzle-orm/pg-core").PgColumn<{
            name: "expertise_focus";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        targetBuyerSegments: import("drizzle-orm/pg-core").PgColumn<{
            name: "target_buyer_segments";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        authorityLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "authority_level";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        professionalBackgroundEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "professional_background_encrypted";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        expertiseCredentialsEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "expertise_credentials_encrypted";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        marketExperienceEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "market_experience_encrypted";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        primaryMarketLocation: import("drizzle-orm/pg-core").PgColumn<{
            name: "primary_market_location";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        secondaryMarketAreas: import("drizzle-orm/pg-core").PgColumn<{
            name: "secondary_market_areas";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        localMarketKnowledgeDepth: import("drizzle-orm/pg-core").PgColumn<{
            name: "local_market_knowledge_depth";
            tableName: "expert_personas";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        timezone: import("drizzle-orm/pg-core").PgColumn<{
            name: "timezone";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        geoContentSpecializations: import("drizzle-orm/pg-core").PgColumn<{
            name: "geo_content_specializations";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        authorityBuildingTopics: import("drizzle-orm/pg-core").PgColumn<{
            name: "authority_building_topics";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        citationWorthyExpertise: import("drizzle-orm/pg-core").PgColumn<{
            name: "citation_worthy_expertise";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        platformExpertiseFocus: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_expertise_focus";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        contentPublicationSchedule: import("drizzle-orm/pg-core").PgColumn<{
            name: "content_publication_schedule";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        expertVoiceCharacteristics: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_voice_characteristics";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        personaEncryptionKeyId: import("drizzle-orm/pg-core").PgColumn<{
            name: "persona_encryption_key_id";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        browserFingerprintConfig: import("drizzle-orm/pg-core").PgColumn<{
            name: "browser_fingerprint_config";
            tableName: "expert_personas";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currentAuthorityScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "current_authority_score";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        estimatedAiCitations: import("drizzle-orm/pg-core").PgColumn<{
            name: "estimated_ai_citations";
            tableName: "expert_personas";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        expertRecognitionSignals: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_recognition_signals";
            tableName: "expert_personas";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        thoughtLeadershipReach: import("drizzle-orm/pg-core").PgColumn<{
            name: "thought_leadership_reach";
            tableName: "expert_personas";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        monthlyConsultationRequests: import("drizzle-orm/pg-core").PgColumn<{
            name: "monthly_consultation_requests";
            tableName: "expert_personas";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        consultationToReferralRate: import("drizzle-orm/pg-core").PgColumn<{
            name: "consultation_to_referral_rate";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        averageConsultationValue: import("drizzle-orm/pg-core").PgColumn<{
            name: "average_consultation_value";
            tableName: "expert_personas";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "expert_personas";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "expert_personas";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastExpertActivity: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_expert_activity";
            tableName: "expert_personas";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const geoPlatformAccounts: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "geo_platform_accounts";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        personaId: import("drizzle-orm/pg-core").PgColumn<{
            name: "persona_id";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        platformType: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_type";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        platformPriority: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_priority";
            tableName: "geo_platform_accounts";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        geoOptimizationLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "geo_optimization_level";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        username: import("drizzle-orm/pg-core").PgColumn<{
            name: "username";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        displayName: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_name";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        expertBio: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_bio";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        expertCredentials: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_credentials";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        profileOptimizationScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "profile_optimization_score";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        credentialsEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "credentials_encrypted";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        authTokensEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "auth_tokens_encrypted";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        accountStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "account_status";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        platformAuthorityLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_authority_level";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        expertVerificationStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_verification_status";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        accountReputationScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "account_reputation_score";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalAuthorityContent: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_authority_content";
            tableName: "geo_platform_accounts";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        averageContentEngagement: import("drizzle-orm/pg-core").PgColumn<{
            name: "average_content_engagement";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        expertRecognitionSignals: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_recognition_signals";
            tableName: "geo_platform_accounts";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        thoughtLeadershipIndicators: import("drizzle-orm/pg-core").PgColumn<{
            name: "thought_leadership_indicators";
            tableName: "geo_platform_accounts";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        platformGeoSettings: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_geo_settings";
            tableName: "geo_platform_accounts";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        contentAuthorityStrategy: import("drizzle-orm/pg-core").PgColumn<{
            name: "content_authority_strategy";
            tableName: "geo_platform_accounts";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        expertEngagementApproach: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_engagement_approach";
            tableName: "geo_platform_accounts";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        citationOptimizationConfig: import("drizzle-orm/pg-core").PgColumn<{
            name: "citation_optimization_config";
            tableName: "geo_platform_accounts";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        monthlyExpertInquiries: import("drizzle-orm/pg-core").PgColumn<{
            name: "monthly_expert_inquiries";
            tableName: "geo_platform_accounts";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        consultationRequests: import("drizzle-orm/pg-core").PgColumn<{
            name: "consultation_requests";
            tableName: "geo_platform_accounts";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        authorityConversionRate: import("drizzle-orm/pg-core").PgColumn<{
            name: "authority_conversion_rate";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        leadQualityFromAuthority: import("drizzle-orm/pg-core").PgColumn<{
            name: "lead_quality_from_authority";
            tableName: "geo_platform_accounts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "geo_platform_accounts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "geo_platform_accounts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastActivity: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_activity";
            tableName: "geo_platform_accounts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const authorityContentPublications: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "authority_content_publications";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        personaId: import("drizzle-orm/pg-core").PgColumn<{
            name: "persona_id";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        platformAccountId: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_account_id";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        contentTitle: import("drizzle-orm/pg-core").PgColumn<{
            name: "content_title";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        contentType: import("drizzle-orm/pg-core").PgColumn<{
            name: "content_type";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        contentCategory: import("drizzle-orm/pg-core").PgColumn<{
            name: "content_category";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        contentUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "content_url";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        contentLength: import("drizzle-orm/pg-core").PgColumn<{
            name: "content_length";
            tableName: "authority_content_publications";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        authorityScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "authority_score";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        aiCitationPotentialScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "ai_citation_potential_score";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        viewCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "view_count";
            tableName: "authority_content_publications";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        engagementCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "engagement_count";
            tableName: "authority_content_publications";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        shareCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "share_count";
            tableName: "authority_content_publications";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        expertRecognitionSignals: import("drizzle-orm/pg-core").PgColumn<{
            name: "expert_recognition_signals";
            tableName: "authority_content_publications";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        consultationInquiriesAttributed: import("drizzle-orm/pg-core").PgColumn<{
            name: "consultation_inquiries_attributed";
            tableName: "authority_content_publications";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        leadConversionsAttributed: import("drizzle-orm/pg-core").PgColumn<{
            name: "lead_conversions_attributed";
            tableName: "authority_content_publications";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        revenueAttributed: import("drizzle-orm/pg-core").PgColumn<{
            name: "revenue_attributed";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        publicationStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "publication_status";
            tableName: "authority_content_publications";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        publishedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "published_at";
            tableName: "authority_content_publications";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "authority_content_publications";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "authority_content_publications";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const proxyAssignments: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "proxy_assignments";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        personaId: import("drizzle-orm/pg-core").PgColumn<{
            name: "persona_id";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        proxyCheapId: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_cheap_id";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        proxyProvider: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_provider";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        proxyType: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_type";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        proxyLocation: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_location";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        assignmentStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "assignment_status";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        proxyHostEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_host_encrypted";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        proxyPortEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_port_encrypted";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        proxyUsernameEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_username_encrypted";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        proxyPasswordEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_password_encrypted";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        proxyCredentialsEncrypted: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_credentials_encrypted";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        detectedCountry: import("drizzle-orm/pg-core").PgColumn<{
            name: "detected_country";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        detectedCity: import("drizzle-orm/pg-core").PgColumn<{
            name: "detected_city";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        detectedRegion: import("drizzle-orm/pg-core").PgColumn<{
            name: "detected_region";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        isPhilippinesVerified: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_philippines_verified";
            tableName: "proxy_assignments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        geoValidationLastCheck: import("drizzle-orm/pg-core").PgColumn<{
            name: "geo_validation_last_check";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        ipReputationScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "ip_reputation_score";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isResidentialVerified: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_residential_verified";
            tableName: "proxy_assignments";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        blacklistCheckStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "blacklist_check_status";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        lastReputationCheck: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_reputation_check";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        proxyStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "proxy_status";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        lastHealthCheck: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_health_check";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        healthCheckStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "health_check_status";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        consecutiveFailures: import("drizzle-orm/pg-core").PgColumn<{
            name: "consecutive_failures";
            tableName: "proxy_assignments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        connectionSuccessRate: import("drizzle-orm/pg-core").PgColumn<{
            name: "connection_success_rate";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        averageResponseTime: import("drizzle-orm/pg-core").PgColumn<{
            name: "average_response_time";
            tableName: "proxy_assignments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        bandwidthUsageMb: import("drizzle-orm/pg-core").PgColumn<{
            name: "bandwidth_usage_mb";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalRequests: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_requests";
            tableName: "proxy_assignments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        failedRequests: import("drizzle-orm/pg-core").PgColumn<{
            name: "failed_requests";
            tableName: "proxy_assignments";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        monthlyCostUsd: import("drizzle-orm/pg-core").PgColumn<{
            name: "monthly_cost_usd";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        dailyCostUsd: import("drizzle-orm/pg-core").PgColumn<{
            name: "daily_cost_usd";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        projectedMonthlyCost: import("drizzle-orm/pg-core").PgColumn<{
            name: "projected_monthly_cost";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        costTrackingStartDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "cost_tracking_start_date";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastCostUpdate: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_cost_update";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        encryptionKeyId: import("drizzle-orm/pg-core").PgColumn<{
            name: "encryption_key_id";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        assignmentReason: import("drizzle-orm/pg-core").PgColumn<{
            name: "assignment_reason";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        lastStatusChange: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_status_change";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        statusChangeReason: import("drizzle-orm/pg-core").PgColumn<{
            name: "status_change_reason";
            tableName: "proxy_assignments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        assignedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "assigned_at";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        activatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "activated_at";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "proxy_assignments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const expertPhoneNumbers: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "expert_phone_numbers";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        personaId: import("drizzle-orm/pg-core").PgColumn<{
            name: "persona_id";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        twilioPhoneNumber: import("drizzle-orm/pg-core").PgColumn<{
            name: "twilio_phone_number";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        twilioPhoneSid: import("drizzle-orm/pg-core").PgColumn<{
            name: "twilio_phone_sid";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        phoneNumberStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "phone_number_status";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        countryCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "country_code";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        friendlyName: import("drizzle-orm/pg-core").PgColumn<{
            name: "friendly_name";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        phoneNumberType: import("drizzle-orm/pg-core").PgColumn<{
            name: "phone_number_type";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        capabilities: import("drizzle-orm/pg-core").PgColumn<{
            name: "capabilities";
            tableName: "expert_phone_numbers";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        assignmentStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "assignment_status";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        assignedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "assigned_at";
            tableName: "expert_phone_numbers";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        monthlyCostUsd: import("drizzle-orm/pg-core").PgColumn<{
            name: "monthly_cost_usd";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        usageThisMonth: import("drizzle-orm/pg-core").PgColumn<{
            name: "usage_this_month";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        webhookUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "webhook_url";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        verificationEnabled: import("drizzle-orm/pg-core").PgColumn<{
            name: "verification_enabled";
            tableName: "expert_phone_numbers";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        encryptionKeyId: import("drizzle-orm/pg-core").PgColumn<{
            name: "encryption_key_id";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        lastHealthCheck: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_health_check";
            tableName: "expert_phone_numbers";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        healthStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "health_status";
            tableName: "expert_phone_numbers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        consecutiveFailures: import("drizzle-orm/pg-core").PgColumn<{
            name: "consecutive_failures";
            tableName: "expert_phone_numbers";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "expert_phone_numbers";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "expert_phone_numbers";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastActivity: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_activity";
            tableName: "expert_phone_numbers";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const smsVerificationSessions: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "sms_verification_sessions";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        personaId: import("drizzle-orm/pg-core").PgColumn<{
            name: "persona_id";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        phoneNumberId: import("drizzle-orm/pg-core").PgColumn<{
            name: "phone_number_id";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        platformType: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_type";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        platformAction: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_action";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        sessionStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_status";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        sessionStartedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_started_at";
            tableName: "sms_verification_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        sessionExpiredAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_expired_at";
            tableName: "sms_verification_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        expectedCodePattern: import("drizzle-orm/pg-core").PgColumn<{
            name: "expected_code_pattern";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        maxRetries: import("drizzle-orm/pg-core").PgColumn<{
            name: "max_retries";
            tableName: "sms_verification_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        attemptsRemaining: import("drizzle-orm/pg-core").PgColumn<{
            name: "attempts_remaining";
            tableName: "sms_verification_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userAgent: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_agent";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        ipAddress: import("drizzle-orm/pg-core").PgColumn<{
            name: "ip_address";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        sessionNotes: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_notes";
            tableName: "sms_verification_sessions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "sms_verification_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "sms_verification_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        completedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "completed_at";
            tableName: "sms_verification_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const smsMessages: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "sms_messages";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        phoneNumberId: import("drizzle-orm/pg-core").PgColumn<{
            name: "phone_number_id";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        twilioMessageSid: import("drizzle-orm/pg-core").PgColumn<{
            name: "twilio_message_sid";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        fromPhoneNumber: import("drizzle-orm/pg-core").PgColumn<{
            name: "from_phone_number";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        toPhoneNumber: import("drizzle-orm/pg-core").PgColumn<{
            name: "to_phone_number";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        messageBody: import("drizzle-orm/pg-core").PgColumn<{
            name: "message_body";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        messageDirection: import("drizzle-orm/pg-core").PgColumn<{
            name: "message_direction";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        messageStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "message_status";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        verificationCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "verification_code";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        codeConfidence: import("drizzle-orm/pg-core").PgColumn<{
            name: "code_confidence";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        codePattern: import("drizzle-orm/pg-core").PgColumn<{
            name: "code_pattern";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        detectedPlatform: import("drizzle-orm/pg-core").PgColumn<{
            name: "detected_platform";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        platformConfidence: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_confidence";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processingStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_status";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        processingNotes: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_notes";
            tableName: "sms_messages";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        deliveredToDashboard: import("drizzle-orm/pg-core").PgColumn<{
            name: "delivered_to_dashboard";
            tableName: "sms_messages";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        receivedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "received_at";
            tableName: "sms_messages";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "processed_at";
            tableName: "sms_messages";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "sms_messages";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const verificationCodes: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "verification_codes";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        messageId: import("drizzle-orm/pg-core").PgColumn<{
            name: "message_id";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        verificationCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "verification_code";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        codeType: import("drizzle-orm/pg-core").PgColumn<{
            name: "code_type";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        codeLength: import("drizzle-orm/pg-core").PgColumn<{
            name: "code_length";
            tableName: "verification_codes";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isValid: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_valid";
            tableName: "verification_codes";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        validationScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "validation_score";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        platformType: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_type";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        codeUsageType: import("drizzle-orm/pg-core").PgColumn<{
            name: "code_usage_type";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        codeStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "code_status";
            tableName: "verification_codes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        usedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "used_at";
            tableName: "verification_codes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        expiresAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "expires_at";
            tableName: "verification_codes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        sentToDashboard: import("drizzle-orm/pg-core").PgColumn<{
            name: "sent_to_dashboard";
            tableName: "verification_codes";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        dashboardDeliveryAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "dashboard_delivery_at";
            tableName: "verification_codes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        viewedByUser: import("drizzle-orm/pg-core").PgColumn<{
            name: "viewed_by_user";
            tableName: "verification_codes";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        viewedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "viewed_at";
            tableName: "verification_codes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        extractedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "extracted_at";
            tableName: "verification_codes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "verification_codes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const smsWebhookEvents: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "sms_webhook_events";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "sms_webhook_events";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        webhookEventType: import("drizzle-orm/pg-core").PgColumn<{
            name: "webhook_event_type";
            tableName: "sms_webhook_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        twilioEventSid: import("drizzle-orm/pg-core").PgColumn<{
            name: "twilio_event_sid";
            tableName: "sms_webhook_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        requestBody: import("drizzle-orm/pg-core").PgColumn<{
            name: "request_body";
            tableName: "sms_webhook_events";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        requestHeaders: import("drizzle-orm/pg-core").PgColumn<{
            name: "request_headers";
            tableName: "sms_webhook_events";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        sourceIp: import("drizzle-orm/pg-core").PgColumn<{
            name: "source_ip";
            tableName: "sms_webhook_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        processingStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_status";
            tableName: "sms_webhook_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        processingError: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_error";
            tableName: "sms_webhook_events";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        processingDuration: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_duration";
            tableName: "sms_webhook_events";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        messageId: import("drizzle-orm/pg-core").PgColumn<{
            name: "message_id";
            tableName: "sms_webhook_events";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "sms_webhook_events";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        receivedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "received_at";
            tableName: "sms_webhook_events";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "processed_at";
            tableName: "sms_webhook_events";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "sms_webhook_events";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const expertPersonasNameIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const expertPersonasStatusIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const expertPersonasAuthorityIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const geoPlatformAccountsPersonaIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const geoPlatformAccountsPlatformIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const contentPublicationsPersonaIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const contentPublicationsPlatformIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const proxyAssignmentsPersonaIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const expertPhoneNumbersPersonaIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const expertPhoneNumbersStatusIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const expertPhoneNumbersTwilioNumberIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const smsVerificationSessionsPersonaIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const smsVerificationSessionsPhoneIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const smsVerificationSessionsStatusIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const smsMessagesSessionIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const smsMessagesPhoneIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const smsMessagesTwilioSidIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const verificationCodesSessionIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const verificationCodesStatusIdx: import("drizzle-orm/pg-core").IndexBuilder;
export declare const smsWebhookEventsTypeIdx: import("drizzle-orm/pg-core").IndexBuilder;
export type AdminUser = typeof adminUsers.$inferSelect;
export type NewAdminUser = typeof adminUsers.$inferInsert;
export type ExpertPersona = typeof expertPersonas.$inferSelect;
export type NewExpertPersona = typeof expertPersonas.$inferInsert;
export type GeoPlatformAccount = typeof geoPlatformAccounts.$inferSelect;
export type NewGeoPlatformAccount = typeof geoPlatformAccounts.$inferInsert;
export type AuthorityContentPublication = typeof authorityContentPublications.$inferSelect;
export type NewAuthorityContentPublication = typeof authorityContentPublications.$inferInsert;
export type ProxyAssignment = typeof proxyAssignments.$inferSelect;
export type NewProxyAssignment = typeof proxyAssignments.$inferInsert;
export type ExpertPhoneNumber = typeof expertPhoneNumbers.$inferSelect;
export type NewExpertPhoneNumber = typeof expertPhoneNumbers.$inferInsert;
export type SmsVerificationSession = typeof smsVerificationSessions.$inferSelect;
export type NewSmsVerificationSession = typeof smsVerificationSessions.$inferInsert;
export type SmsMessage = typeof smsMessages.$inferSelect;
export type NewSmsMessage = typeof smsMessages.$inferInsert;
export type VerificationCode = typeof verificationCodes.$inferSelect;
export type NewVerificationCode = typeof verificationCodes.$inferInsert;
export type SmsWebhookEvent = typeof smsWebhookEvents.$inferSelect;
export type NewSmsWebhookEvent = typeof smsWebhookEvents.$inferInsert;
//# sourceMappingURL=schema.d.ts.map